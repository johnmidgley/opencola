syntax = "proto3";

package io.opencola.relay.common.protobuf;

message Connect {
  bytes publicKey = 1;
}

message Challenge {
  string algorithm = 1;
  bytes data = 2;
}

message Signature {
  string algorithm = 1;
  bytes signature = 2;
}

message Header {
  bytes from = 1;
  bytes sessionId = 2;
  Signature signature = 3;
}

message RelayMessage {
  Header header = 1;
  bytes body = 2;
}

message Envelope {
  bytes toPublicKey = 1;

  // Message key used for deduplication. When present, if the relay has to store the message, only one with the same
  // key will be stored. If not present, the message is considered transient and will not be stored.
  bytes key = 2;

  bytes body = 3;
}



