# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Verify build on push and pull

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    name: Build oc-server
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: install

    steps:
    
    #step: Checkout code
    - name: Checkout
      uses: actions/checkout@v3

    #step: Set up Java env
    - name: Build
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
        cache: 'gradle'
    
    #step: Run Gradle tests
    - name: Run Gradle tests
      run: |
        cd ../opencola-server
    #    ./gradlew test

    #step: Run Gradle build
    - name: Build with gradlew installDist
      run: |
        cd ../opencola-server
        ./gradlew installDist

    #step: Package - copy distribution
    #- name: Copy distribution
    #  run: |
    #    cd ../install/opencola
    #    cp ../scripts/* .
    #    cp ../README.txt .
    #    mkdir server
    #    cp -r ../../opencola-server/build/install/opencola-server/* server
    
    # # step Package Copy config
    #   - name: Copy config
    #     run: |
    #       #cp ../../opencola-server/opencola-server.yaml server
    #       mkdir oc-network
    #       cp ../../network/docker-compose.yml oc-network
    
    # #step Package Copy resources
    #   - name: Copy resources
    #     run: |
    #       mkdir server/resources
    #       cp -r ../../opencola-server/resources/* server/resources/
    
    # #step Package copy Chrome extension
    #   - name: Copy Chrome extension
    #     run: |
    #       cp -r  ../../extension/chrome .

    # #step Package Create storage
    #   - name: Create storage
    #     run: |
    #       mkdir -p storage/var-solr/data
    #       cp ../../storage/opencola-server.yaml storage/
    #       cp ../../storage/var-solr/log4j2.xml storage/var-solr/
    #       cp -r ../../storage/var-solr/data/configsets/ storage/var-solr/data/configsets
    #       cp ../../storage/var-solr/data/solr.xml storage/var-solr/data/
    #       cp ../../storage/var-solr/data/zoo.cfg storage/var-solr/data/
    
    #step All finished
    #    - name: All finished

    #step Package
    #  - name: 
    #    run: |
           
    #step: get the date for the build packages
    #- name: Get date for build outputs
    #  id: date
    #  #run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    #  run: echo "date_string=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
      
    #step: upload build
    #- name: Upload build
    #  uses: actions/upload-artifact@v3
    #  with:
    #    name: oc_${{ env.date_string }}_${{ github.REF_NAME }}_${{ github.RUN_ID }}-${{ github.RUN_ATTEMPT }}_${{ env.TAG_NAME }}_${{ github.SHA }}
    #    path: install/
    #    retention-days: 3

